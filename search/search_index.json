{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation du Trackteur Arduino Bienvenue dans la documentation du projet Trackteur Arduino. Ce site couvre : Pr\u00e9sentation du projet Mat\u00e9riel Guide d'assemblage Logiciel (configuration & d\u00e9ploiement) D\u00e9pannage / FAQ Contribution Utilisez le menu \u00e0 gauche pour naviguer.","title":"Accueil"},{"location":"#documentation-du-trackteur-arduino","text":"Bienvenue dans la documentation du projet Trackteur Arduino. Ce site couvre : Pr\u00e9sentation du projet Mat\u00e9riel Guide d'assemblage Logiciel (configuration & d\u00e9ploiement) D\u00e9pannage / FAQ Contribution Utilisez le menu \u00e0 gauche pour naviguer.","title":"Documentation du Trackteur Arduino"},{"location":"assembly/","text":"Assemblage pas-\u00e0-pas Pr\u00e9-requis Fer \u00e0 souder Multim\u00e8tre Tournevis \u00c9tapes Soudure des r\u00e9sistances et condensateurs Insertion des supports SIM et \u00b5SD Montage du module GSM/GPS V\u00e9rification des connexions Montage dans le bo\u00eetier Ajoutez des photos \u00e0 chaque \u00e9tape.","title":"Assemblage"},{"location":"assembly/#assemblage-pas-a-pas","text":"","title":"Assemblage pas-\u00e0-pas"},{"location":"assembly/#pre-requis","text":"Fer \u00e0 souder Multim\u00e8tre Tournevis","title":"Pr\u00e9-requis"},{"location":"assembly/#etapes","text":"Soudure des r\u00e9sistances et condensateurs Insertion des supports SIM et \u00b5SD Montage du module GSM/GPS V\u00e9rification des connexions Montage dans le bo\u00eetier Ajoutez des photos \u00e0 chaque \u00e9tape.","title":"\u00c9tapes"},{"location":"contributing/","text":"Contribution Les contributions sont les bienvenues : Forkez le projet Cr\u00e9ez une branche pour votre fonctionnalit\u00e9 Ouvrez une Pull Request Merci de respecter la convention de code et de documenter vos changements.","title":"Contribution"},{"location":"contributing/#contribution","text":"Les contributions sont les bienvenues : Forkez le projet Cr\u00e9ez une branche pour votre fonctionnalit\u00e9 Ouvrez une Pull Request Merci de respecter la convention de code et de documenter vos changements.","title":"Contribution"},{"location":"hardware/","text":"Mat\u00e9riel Sch\u00e9ma \u00e9lectrique Ins\u00e9rez ici le sch\u00e9ma du circuit et le PCB export\u00e9. Liste des composants (BOM) Quantit\u00e9 R\u00e9f\u00e9rence Description 1 Arduino Nano ou Pro Mini (Compl\u00e9ter avec toutes les pi\u00e8ces.)","title":"Mat\u00e9riel"},{"location":"hardware/#materiel","text":"","title":"Mat\u00e9riel"},{"location":"hardware/#schema-electrique","text":"Ins\u00e9rez ici le sch\u00e9ma du circuit et le PCB export\u00e9.","title":"Sch\u00e9ma \u00e9lectrique"},{"location":"hardware/#liste-des-composants-bom","text":"Quantit\u00e9 R\u00e9f\u00e9rence Description 1 Arduino Nano ou Pro Mini (Compl\u00e9ter avec toutes les pi\u00e8ces.)","title":"Liste des composants (BOM)"},{"location":"presentation/","text":"Pr\u00e9sentation Contexte Description du contexte du projet. Objectifs Tracker GPS Logger SD Envoi GSM vers serveur Traccar Fonctionnalit\u00e9s principales R\u00e9ception GPS via module Envoi de donn\u00e9es via module GSM Sauvegarde locale sur carte SD","title":"Pr\u00e9sentation"},{"location":"presentation/#presentation","text":"","title":"Pr\u00e9sentation"},{"location":"presentation/#contexte","text":"Description du contexte du projet.","title":"Contexte"},{"location":"presentation/#objectifs","text":"Tracker GPS Logger SD Envoi GSM vers serveur Traccar","title":"Objectifs"},{"location":"presentation/#fonctionnalites-principales","text":"R\u00e9ception GPS via module Envoi de donn\u00e9es via module GSM Sauvegarde locale sur carte SD","title":"Fonctionnalit\u00e9s principales"},{"location":"software/","text":"Logiciel Pr\u00e9requis Arduino IDE (>=1.8) Biblioth\u00e8ques : TinyGPS++, SdFat, GSMStream (ou \u00e9quivalent) Installation arduino-cli compile --fqbn arduino:avr:nano code/code.ino arduino-cli upload -p /dev/ttyUSB0 --fqbn arduino:avr:nano code/code.ino Configuration APN op\u00e9rateur URL Traccar Config pins dans common.h","title":"Logiciel"},{"location":"software/#logiciel","text":"","title":"Logiciel"},{"location":"software/#prerequis","text":"Arduino IDE (>=1.8) Biblioth\u00e8ques : TinyGPS++, SdFat, GSMStream (ou \u00e9quivalent)","title":"Pr\u00e9requis"},{"location":"software/#installation","text":"arduino-cli compile --fqbn arduino:avr:nano code/code.ino arduino-cli upload -p /dev/ttyUSB0 --fqbn arduino:avr:nano code/code.ino","title":"Installation"},{"location":"software/#configuration","text":"APN op\u00e9rateur URL Traccar Config pins dans common.h","title":"Configuration"},{"location":"test_protocol_trackteur/","text":"Protocole de Validation Exhaustif \u2014 Projet Trackteur Version : 1.0 \u2003\u2003 R\u00e9vision du firmware test\u00e9e : $(git rev-parse --short HEAD) NB : ce protocole s\u2019appuie sur l\u2019impl\u00e9mentation exacte observ\u00e9e dans le d\u00e9p\u00f4t (fichiers code/* ). Les libell\u00e9s, messages Serial et noms de fonctions cit\u00e9s proviennent du code source et permettent une tra\u00e7abilit\u00e9 directe entre les tests et l\u2019impl\u00e9mentation. Table des mati\u00e8res Objectifs et port\u00e9e Pr\u00e9requis 2.1 Mat\u00e9riel\u20032.2 Logiciel\u20032.3 Pr\u00e9paration du banc Convention de nommage & journalisation Plan de test d\u00e9taill\u00e9 (pas-\u00e0-pas) 4.1 Initialisation \u00ab cold-boot \u00bb 4.2 Pile r\u00e9seau LTE & d\u00e9tection SIM 4.3 GNSS : acquisition & parsing ( getGpsData ) 4.4 SD : moteur Petit FatFs ( sdlog.cpp ) 4.5 Flux Traccar ( sendGpsToTraccar ) 4.6 Watch-dog & r\u00e9silience ( serviceNetwork , resetGsmModule ) 4.7 Tests de bordure & corruption (fichiers, buffers, wrap-around) Crit\u00e8res de succ\u00e8s/\u00e9chec Collecte des preuves & archivage Annexes 1. Objectifs et port\u00e9e Valider que Trackteur \u2013 mat\u00e9riel, firmware et logique back-end \u2013 fonctionne dans toutes les conditions pr\u00e9vues par le code (fichiers code/*.cpp ). \u2022 Fiabilit\u00e9 du boot, absence de sur-consommation (< 200 mA @ 5 V lors du pic d\u2019initialisation observ\u00e9 dans setup() ). \u2022 Bon d\u00e9roulement de la s\u00e9quence serviceNetwork() : initialCommunication() \u25ba step1\u20264 \u25ba \u00e9tat NetState::ONLINE . \u2022 Performance des fonctions critiques : getGpsData , openDataStack , tcpSend , logRealPositionToSd , etc. \u2022 Robustesse face aux fautes : perte r\u00e9seau, corruption secteur, overflow de buffers ( RESPONSE_BUFFER_SIZE = 128 octets ), red\u00e9marrage forc\u00e9 (watch-dog). \u2022 Conformit\u00e9 du format de trame HTTP GET attendu par Traccar. 2. Pr\u00e9requis 2.1 Mat\u00e9riel R\u00e9f Qt\u00e9 D\u00e9tails Carte Trackteur assembl\u00e9e 2 Une avec SIM7000G , une avec A7670E (d\u00e9tection via ATI ) Alim de labo 5 V / 2 A 1 Lim courant ajustable Batterie Li-ion 18650 2400 mAh 1 Test coupure secteur C\u00e2ble USB-TTL 115 200 bps mini 1 Console debug (pins RX0/TX0) Antennes LTE & GNSS 1+1 Connecteurs U.FL \u224850 \u03a9 SIM M2M data 1 APN : onomondo (cf. const char* APN ) micro-SD 4 Go class 10 1 Format FAT32, sector size 512 o PC Windows/Linux 1 Ports USB, Python \u2265 3.8 Multim\u00e8tre + oscillo \u2265 50 MHz - V\u00e9r. VCC, bruit, toggles GPIO Cage Faraday (boite m\u00e9tal) - Simuler perte r\u00e9seau 2.2 Logiciel \u2022 Toolchain Arduino / PlatformIO (AVR-gcc 5+). \u2022 Terminal s\u00e9rie : minicom , PuTTY ou \u00e9quivalent avec log cru . \u2022 Python 3 + d\u00e9pendances ( pyserial , pandas ) : scripts tools/trackteur_harness.py (fourni). \u2022 Serveur Traccar (v5+) local : acc\u00e8s au log tracker-server.log . \u2022 Optionnel : simulateur NMEA (plages de tests GNSS en int\u00e9rieur). 2.3 Pr\u00e9paration du banc Flasher la r\u00e9vision release-candidate ( git checkout <tag> ). Sauvegarder le SHA-1 dans la feuille de r\u00e9sultat. V\u00e9rifier soudures, polarit\u00e9s et continuit\u00e9 D2 (GPIO powerPin ). Ins\u00e9rer la micro-SD puis ex\u00e9cuter initializeSD() via un sketch simple : assure un montage OK avant campagne. Ins\u00e9rer la carte SIM, antennes GNSS & LTE (v\u00e9rifier pas d\u2019inversion). Relier la console s\u00e9rie (115 200 bps). Activer capture RAW . 3. Convention de nommage & journalisation \u2022 Un ID unique T-<Domaine>-NNN par cas (ex : T-GSM-012 ). \u2022 Tous les logs Serial doivent \u00eatre conserv\u00e9s : /logs/YYYY-MM-DD/<ID>.log . \u2022 Scripts Python : chaque test \u00e9crit un CSV /results/YYYY-MM-DD/<ID>.csv avec timestamp ISO8601 , result , duration_ms , et commentaires. \u2022 Photos/Vid\u00e9os : nom IMG_<ID>_stepX.jpg . 4. Plan de test d\u00e9taill\u00e9 Lecture des colonnes Pr\u00e9-cond. = \u00e9tat et configuration \u00e0 respecter avant d\u00e9roul\u00e9. \u00c9tapes = s\u00e9quence manuelle/automatis\u00e9e. Attendu = crit\u00e8re de succ\u00e8s issu des messages ou valeurs retourn\u00e9es . Timeout/it\u00e9ration = valeur max avant \u00e9chec. 4.1 Cold-boot & Initialisation ID Objectif Pr\u00e9-cond. \u00c9tapes Attendu / Timeout T-BOOT-001 Absence de sur-conso Alim labo 5 V ; I_lim = 500 mA Alimenter. I_cr\u00eate < 200 mA (lecture multim\u00e8tre \u2039 5 s). T-BOOT-002 Banni\u00e8re USB visible UART ouvert 115 200 bps Presse RESET MCU Log \u00ab --- Arduino Initialized --- \u00bb < 1 s. T-BOOT-003 Setup termin\u00e9 Observer console \u00ab === SETUP TERMIN\u00c9 === \u00bb < 10 s. T-BOOT-004 Watchdog actif Modifier initializeWatchdog() pour activer wdt_enable(WDTO_8S) et re-flasher Laisser tourner 30 min Aucun reset impromptu. 4.2 Pile r\u00e9seau & SIM ID Objectif Pr\u00e9-cond. \u00c9tapes Attendu T-GSM-010 D\u00e9tection modem D\u00e9marrage normal V\u00e9rifier log >> Modem detected: ... Mod\u00e8le correct ( SIM7000G ou A7670E ). T-GSM-020 initialCommunication() Surveiller log Suite d\u2019 OK pour ATE0 , AT+CMEE=2 etc. T-GSM-030 APN configur\u00e9 Chercher \u00ab AT+CGDCONT=1,\"IP\",\"onomondo\" \u00bb APN = constante APN . T-GSM-040 SIM Ready Confirmer SIM Ready. Re\u00e7u < 15 s. T-GSM-050 Enregistr\u00e9 r\u00e9seau Registered. dans log \u2039 60 s sinon E . T-GSM-060 openDataStack() LOG \u00ab \u2714 TCP connection successful \u00bb ou NETOPEN OK 3 tentatives max. T-GSM-070 Reconnexion OFFLINE\u2192ONLINE Forcer r\u00e9seau OFF (boite Faraday 2 min) Observer bascule NetState::OFFLINE puis reconnection Reprise < RECONNECT_PERIOD (60 s). 4.3 GNSS ( gps.cpp ) ID Objectif \u00c9tapes Succ\u00e8s T-GPS-100 getGpsData valid \u2013 SIM7000 Champ libre ciel d\u00e9gag\u00e9 Temps fix ( run=1, fix=1 ) < 45 s. T-GPS-110 getGpsData valid \u2013 A7670 AT+CGPSINFO Champs non-vides, TS pars\u00e9. T-GPS-120 Format timestamp Inspecter buffer gpsTimestampTraccar Format YYYY-MM-DD%20hh:mm:ss . T-GPS-130 Pr\u00e9cision position Comparer \u00e0 coord. r\u00e9f. (DGPS) \u0394 < \u00b115 m. T-GPS-140 Robustesse buffer Envoyer r\u00e9ponse +CGNSINF de 200 car. (script) Pas d\u2019overflow (taille d\u00e9finie 128). 4.4 SD & journalisation sectorielle ID Objectif \u00c9tapes Attendu T-SD-200 Montage FS Power-up \u00ab Carte SD mont\u00e9e avec succ\u00e8s. \u00bb T-SD-210 \u00c9criture secteur Forcer OFFLINE, laisser 5 positions Secteur \u00e9crit, pr\u00e9fixe ! , sectorIndex incr\u00e9mente. T-SD-220 Marquage # envoy\u00e9 Reconnecter r\u00e9seau puis appeler resendLastLog() Secteur pr\u00e9c\u00e9dant passe # . T-SD-230 Corruption metadata \u00c9diter \u00ab GPS_LOG.CSV \u00bb : alt\u00e9rer signature Au boot : log \u00ab Signature invalide \u00bb et saveLogMetadata(1) . T-SD-240 Overflow MAX_SECTORS Simuler sectorIndex=MAX_SECTORS+1 via debug Index remis \u00e0 1. 4.5 Transmission Traccar ID Objectif \u00c9tapes Succ\u00e8s T-NET-300 Connexion TCP tcpOpen() \u00ab \u2714 TCP connection successful \u00bb sous 30 s. T-NET-310 Construction HTTP Inspecter httpReq Cha\u00eene = GET /?id=<DEVICE_ID>&lat=<lat>&lon=<lon>&timestamp=<ts> + CRLFCRLF T-NET-320 tcpSend prompt V\u00e9rifier r\u00e9ception char > < 3 s. T-NET-330 SEND OK Dans 10 s apr\u00e8s payload OK. T-NET-340 Fermeture propre tcpClose \u2192 CLOSE OK ou +CIPCLOSE: Ferm\u00e9 < 10 s. T-NET-350 Charge offline 200 trames Forcer stock SD, r\u00e9tablir r\u00e9seau 200 requ\u00eates re\u00e7ues dans ordre ASC (v\u00e9r. log Traccar). 4.6 Watch-dog & recovery ID Objectif \u00c9tapes Succ\u00e8s T-WDG-400 wdt_reset appel\u00e9 Brancher oscillo sur pin 13, placer un digitalWrite(13, !digitalRead(13)); dans wdt_reset() Toggle p\u00e9riodique < 120 ms. T-WDG-410 Boucle bloqu\u00e9e Injecter while(1); via serial debug (commande DBG_LOCK ) Reboot < 8 s. T-WDG-420 resetGsmModule() D\u00e9brancher antenne LTE 5 min Log \u00ab *** Power-cycling GSM module *** \u00bb. T-WDG-430 Compteur consecutiveNetFails Simuler 5 \u00e9checs r\u00e9seau Reset module puis compteur = 0. 4.7 Bords, limites et injection d\u2019erreurs ID Sc\u00e9nario M\u00e9thode Attendu T-ERR-500 Buffer s\u00e9rie plein Script Python envoie 256 chars rapidement Log \u26a0\ufe0f overflow, flushing puis fonctionnement normal. T-ERR-510 Wrap-around sectorIndex Positionner sectorIndex=MAX_SECTORS +1 Au log suivant, index=1, aucun crash. T-ERR-520 TCP refus\u00e9 Noter d\u00e9connexion serveur tcpOpen() \u2192 \u00e9chec ; firmware stocke data SD, reste ONLINE=false. 5. Crit\u00e8res de succ\u00e8s / \u00e9chec \u2022 Succ\u00e8s : tous les IDs marqu\u00e9s \u00ab S \u00bb dans la feuille de r\u00e9sultats, aucune alarme critique (Serial \u00ab FATAL \u00bb ou \u00ab ERROR \u00bb) non r\u00e9solue. \u2022 \u00c9chec bloquant : un seul KO dans les sections 4.1-4.5 impose correctif avant production. \u2022 \u00c9chec non-bloquant : cas de stress (4.7) peuvent ouvrir une issue GitHub sans stopper la s\u00e9rie. 6. Collecte des preuves & archivage Script tools/collect_logs.py : range .log et .csv automatiquement. Compression zip + checksum SHA-256. Push dans d\u00e9p\u00f4t interne validation/trackteur_tests_<date>.zip . R\u00e9diger ticket JIRA si KO. 7. Annexes A. Mod\u00e8le de feuille de r\u00e9sultats ID Date/Heure R\u00e9sultat (S/E) Observateur Notes B. Commandes AT fr\u00e9quentes (extrait) ATI AT+CPIN? AT+CREG? AT+CGATT? AT+CGNSINF # SIM7000 AT+CGPSINFO # A7670 AT+CIPSTART=\"TCP\",\"trackteur.ve2fpd.com\",5055 AT+CIPSEND=<len> C. Points de mesure \u2014 PCB v1 Rep\u00e8re D\u00e9signation Commentaire TP1 VCC_5V 5 V r\u00e9gulateur LM2596 TP2 V_BAT Li-ion apr\u00e8s protection TP3 D2 (PWRKEY) Doit commuter 0 \u2192 1 pour ON module Fin de document \u2013 Protocole de test Trackteur","title":"Protocole de Validation Exhaustif \u2014 Projet Trackteur"},{"location":"test_protocol_trackteur/#protocole-de-validation-exhaustif-projet-trackteur","text":"Version : 1.0 \u2003\u2003 R\u00e9vision du firmware test\u00e9e : $(git rev-parse --short HEAD) NB : ce protocole s\u2019appuie sur l\u2019impl\u00e9mentation exacte observ\u00e9e dans le d\u00e9p\u00f4t (fichiers code/* ). Les libell\u00e9s, messages Serial et noms de fonctions cit\u00e9s proviennent du code source et permettent une tra\u00e7abilit\u00e9 directe entre les tests et l\u2019impl\u00e9mentation.","title":"Protocole de Validation Exhaustif \u2014 Projet Trackteur"},{"location":"test_protocol_trackteur/#table-des-matieres","text":"Objectifs et port\u00e9e Pr\u00e9requis 2.1 Mat\u00e9riel\u20032.2 Logiciel\u20032.3 Pr\u00e9paration du banc Convention de nommage & journalisation Plan de test d\u00e9taill\u00e9 (pas-\u00e0-pas) 4.1 Initialisation \u00ab cold-boot \u00bb 4.2 Pile r\u00e9seau LTE & d\u00e9tection SIM 4.3 GNSS : acquisition & parsing ( getGpsData ) 4.4 SD : moteur Petit FatFs ( sdlog.cpp ) 4.5 Flux Traccar ( sendGpsToTraccar ) 4.6 Watch-dog & r\u00e9silience ( serviceNetwork , resetGsmModule ) 4.7 Tests de bordure & corruption (fichiers, buffers, wrap-around) Crit\u00e8res de succ\u00e8s/\u00e9chec Collecte des preuves & archivage Annexes","title":"Table des mati\u00e8res"},{"location":"test_protocol_trackteur/#1-objectifs-et-portee","text":"Valider que Trackteur \u2013 mat\u00e9riel, firmware et logique back-end \u2013 fonctionne dans toutes les conditions pr\u00e9vues par le code (fichiers code/*.cpp ). \u2022 Fiabilit\u00e9 du boot, absence de sur-consommation (< 200 mA @ 5 V lors du pic d\u2019initialisation observ\u00e9 dans setup() ). \u2022 Bon d\u00e9roulement de la s\u00e9quence serviceNetwork() : initialCommunication() \u25ba step1\u20264 \u25ba \u00e9tat NetState::ONLINE . \u2022 Performance des fonctions critiques : getGpsData , openDataStack , tcpSend , logRealPositionToSd , etc. \u2022 Robustesse face aux fautes : perte r\u00e9seau, corruption secteur, overflow de buffers ( RESPONSE_BUFFER_SIZE = 128 octets ), red\u00e9marrage forc\u00e9 (watch-dog). \u2022 Conformit\u00e9 du format de trame HTTP GET attendu par Traccar.","title":"1. Objectifs et port\u00e9e"},{"location":"test_protocol_trackteur/#2-prerequis","text":"","title":"2. Pr\u00e9requis"},{"location":"test_protocol_trackteur/#21-materiel","text":"R\u00e9f Qt\u00e9 D\u00e9tails Carte Trackteur assembl\u00e9e 2 Une avec SIM7000G , une avec A7670E (d\u00e9tection via ATI ) Alim de labo 5 V / 2 A 1 Lim courant ajustable Batterie Li-ion 18650 2400 mAh 1 Test coupure secteur C\u00e2ble USB-TTL 115 200 bps mini 1 Console debug (pins RX0/TX0) Antennes LTE & GNSS 1+1 Connecteurs U.FL \u224850 \u03a9 SIM M2M data 1 APN : onomondo (cf. const char* APN ) micro-SD 4 Go class 10 1 Format FAT32, sector size 512 o PC Windows/Linux 1 Ports USB, Python \u2265 3.8 Multim\u00e8tre + oscillo \u2265 50 MHz - V\u00e9r. VCC, bruit, toggles GPIO Cage Faraday (boite m\u00e9tal) - Simuler perte r\u00e9seau","title":"2.1 Mat\u00e9riel"},{"location":"test_protocol_trackteur/#22-logiciel","text":"\u2022 Toolchain Arduino / PlatformIO (AVR-gcc 5+). \u2022 Terminal s\u00e9rie : minicom , PuTTY ou \u00e9quivalent avec log cru . \u2022 Python 3 + d\u00e9pendances ( pyserial , pandas ) : scripts tools/trackteur_harness.py (fourni). \u2022 Serveur Traccar (v5+) local : acc\u00e8s au log tracker-server.log . \u2022 Optionnel : simulateur NMEA (plages de tests GNSS en int\u00e9rieur).","title":"2.2 Logiciel"},{"location":"test_protocol_trackteur/#23-preparation-du-banc","text":"Flasher la r\u00e9vision release-candidate ( git checkout <tag> ). Sauvegarder le SHA-1 dans la feuille de r\u00e9sultat. V\u00e9rifier soudures, polarit\u00e9s et continuit\u00e9 D2 (GPIO powerPin ). Ins\u00e9rer la micro-SD puis ex\u00e9cuter initializeSD() via un sketch simple : assure un montage OK avant campagne. Ins\u00e9rer la carte SIM, antennes GNSS & LTE (v\u00e9rifier pas d\u2019inversion). Relier la console s\u00e9rie (115 200 bps). Activer capture RAW .","title":"2.3 Pr\u00e9paration du banc"},{"location":"test_protocol_trackteur/#3-convention-de-nommage-journalisation","text":"\u2022 Un ID unique T-<Domaine>-NNN par cas (ex : T-GSM-012 ). \u2022 Tous les logs Serial doivent \u00eatre conserv\u00e9s : /logs/YYYY-MM-DD/<ID>.log . \u2022 Scripts Python : chaque test \u00e9crit un CSV /results/YYYY-MM-DD/<ID>.csv avec timestamp ISO8601 , result , duration_ms , et commentaires. \u2022 Photos/Vid\u00e9os : nom IMG_<ID>_stepX.jpg .","title":"3. Convention de nommage &amp; journalisation"},{"location":"test_protocol_trackteur/#4-plan-de-test-detaille","text":"","title":"4. Plan de test d\u00e9taill\u00e9"},{"location":"test_protocol_trackteur/#lecture-des-colonnes","text":"Pr\u00e9-cond. = \u00e9tat et configuration \u00e0 respecter avant d\u00e9roul\u00e9. \u00c9tapes = s\u00e9quence manuelle/automatis\u00e9e. Attendu = crit\u00e8re de succ\u00e8s issu des messages ou valeurs retourn\u00e9es . Timeout/it\u00e9ration = valeur max avant \u00e9chec.","title":"Lecture des colonnes"},{"location":"test_protocol_trackteur/#41-cold-boot-initialisation","text":"ID Objectif Pr\u00e9-cond. \u00c9tapes Attendu / Timeout T-BOOT-001 Absence de sur-conso Alim labo 5 V ; I_lim = 500 mA Alimenter. I_cr\u00eate < 200 mA (lecture multim\u00e8tre \u2039 5 s). T-BOOT-002 Banni\u00e8re USB visible UART ouvert 115 200 bps Presse RESET MCU Log \u00ab --- Arduino Initialized --- \u00bb < 1 s. T-BOOT-003 Setup termin\u00e9 Observer console \u00ab === SETUP TERMIN\u00c9 === \u00bb < 10 s. T-BOOT-004 Watchdog actif Modifier initializeWatchdog() pour activer wdt_enable(WDTO_8S) et re-flasher Laisser tourner 30 min Aucun reset impromptu.","title":"4.1 Cold-boot &amp; Initialisation"},{"location":"test_protocol_trackteur/#42-pile-reseau-sim","text":"ID Objectif Pr\u00e9-cond. \u00c9tapes Attendu T-GSM-010 D\u00e9tection modem D\u00e9marrage normal V\u00e9rifier log >> Modem detected: ... Mod\u00e8le correct ( SIM7000G ou A7670E ). T-GSM-020 initialCommunication() Surveiller log Suite d\u2019 OK pour ATE0 , AT+CMEE=2 etc. T-GSM-030 APN configur\u00e9 Chercher \u00ab AT+CGDCONT=1,\"IP\",\"onomondo\" \u00bb APN = constante APN . T-GSM-040 SIM Ready Confirmer SIM Ready. Re\u00e7u < 15 s. T-GSM-050 Enregistr\u00e9 r\u00e9seau Registered. dans log \u2039 60 s sinon E . T-GSM-060 openDataStack() LOG \u00ab \u2714 TCP connection successful \u00bb ou NETOPEN OK 3 tentatives max. T-GSM-070 Reconnexion OFFLINE\u2192ONLINE Forcer r\u00e9seau OFF (boite Faraday 2 min) Observer bascule NetState::OFFLINE puis reconnection Reprise < RECONNECT_PERIOD (60 s).","title":"4.2 Pile r\u00e9seau &amp; SIM"},{"location":"test_protocol_trackteur/#43-gnss-gpscpp","text":"ID Objectif \u00c9tapes Succ\u00e8s T-GPS-100 getGpsData valid \u2013 SIM7000 Champ libre ciel d\u00e9gag\u00e9 Temps fix ( run=1, fix=1 ) < 45 s. T-GPS-110 getGpsData valid \u2013 A7670 AT+CGPSINFO Champs non-vides, TS pars\u00e9. T-GPS-120 Format timestamp Inspecter buffer gpsTimestampTraccar Format YYYY-MM-DD%20hh:mm:ss . T-GPS-130 Pr\u00e9cision position Comparer \u00e0 coord. r\u00e9f. (DGPS) \u0394 < \u00b115 m. T-GPS-140 Robustesse buffer Envoyer r\u00e9ponse +CGNSINF de 200 car. (script) Pas d\u2019overflow (taille d\u00e9finie 128).","title":"4.3 GNSS (gps.cpp)"},{"location":"test_protocol_trackteur/#44-sd-journalisation-sectorielle","text":"ID Objectif \u00c9tapes Attendu T-SD-200 Montage FS Power-up \u00ab Carte SD mont\u00e9e avec succ\u00e8s. \u00bb T-SD-210 \u00c9criture secteur Forcer OFFLINE, laisser 5 positions Secteur \u00e9crit, pr\u00e9fixe ! , sectorIndex incr\u00e9mente. T-SD-220 Marquage # envoy\u00e9 Reconnecter r\u00e9seau puis appeler resendLastLog() Secteur pr\u00e9c\u00e9dant passe # . T-SD-230 Corruption metadata \u00c9diter \u00ab GPS_LOG.CSV \u00bb : alt\u00e9rer signature Au boot : log \u00ab Signature invalide \u00bb et saveLogMetadata(1) . T-SD-240 Overflow MAX_SECTORS Simuler sectorIndex=MAX_SECTORS+1 via debug Index remis \u00e0 1.","title":"4.4 SD &amp; journalisation sectorielle"},{"location":"test_protocol_trackteur/#45-transmission-traccar","text":"ID Objectif \u00c9tapes Succ\u00e8s T-NET-300 Connexion TCP tcpOpen() \u00ab \u2714 TCP connection successful \u00bb sous 30 s. T-NET-310 Construction HTTP Inspecter httpReq Cha\u00eene = GET /?id=<DEVICE_ID>&lat=<lat>&lon=<lon>&timestamp=<ts> + CRLFCRLF T-NET-320 tcpSend prompt V\u00e9rifier r\u00e9ception char > < 3 s. T-NET-330 SEND OK Dans 10 s apr\u00e8s payload OK. T-NET-340 Fermeture propre tcpClose \u2192 CLOSE OK ou +CIPCLOSE: Ferm\u00e9 < 10 s. T-NET-350 Charge offline 200 trames Forcer stock SD, r\u00e9tablir r\u00e9seau 200 requ\u00eates re\u00e7ues dans ordre ASC (v\u00e9r. log Traccar).","title":"4.5 Transmission Traccar"},{"location":"test_protocol_trackteur/#46-watch-dog-recovery","text":"ID Objectif \u00c9tapes Succ\u00e8s T-WDG-400 wdt_reset appel\u00e9 Brancher oscillo sur pin 13, placer un digitalWrite(13, !digitalRead(13)); dans wdt_reset() Toggle p\u00e9riodique < 120 ms. T-WDG-410 Boucle bloqu\u00e9e Injecter while(1); via serial debug (commande DBG_LOCK ) Reboot < 8 s. T-WDG-420 resetGsmModule() D\u00e9brancher antenne LTE 5 min Log \u00ab *** Power-cycling GSM module *** \u00bb. T-WDG-430 Compteur consecutiveNetFails Simuler 5 \u00e9checs r\u00e9seau Reset module puis compteur = 0.","title":"4.6 Watch-dog &amp; recovery"},{"location":"test_protocol_trackteur/#47-bords-limites-et-injection-derreurs","text":"ID Sc\u00e9nario M\u00e9thode Attendu T-ERR-500 Buffer s\u00e9rie plein Script Python envoie 256 chars rapidement Log \u26a0\ufe0f overflow, flushing puis fonctionnement normal. T-ERR-510 Wrap-around sectorIndex Positionner sectorIndex=MAX_SECTORS +1 Au log suivant, index=1, aucun crash. T-ERR-520 TCP refus\u00e9 Noter d\u00e9connexion serveur tcpOpen() \u2192 \u00e9chec ; firmware stocke data SD, reste ONLINE=false.","title":"4.7 Bords, limites et injection d\u2019erreurs"},{"location":"test_protocol_trackteur/#5-criteres-de-succes-echec","text":"\u2022 Succ\u00e8s : tous les IDs marqu\u00e9s \u00ab S \u00bb dans la feuille de r\u00e9sultats, aucune alarme critique (Serial \u00ab FATAL \u00bb ou \u00ab ERROR \u00bb) non r\u00e9solue. \u2022 \u00c9chec bloquant : un seul KO dans les sections 4.1-4.5 impose correctif avant production. \u2022 \u00c9chec non-bloquant : cas de stress (4.7) peuvent ouvrir une issue GitHub sans stopper la s\u00e9rie.","title":"5. Crit\u00e8res de succ\u00e8s / \u00e9chec"},{"location":"test_protocol_trackteur/#6-collecte-des-preuves-archivage","text":"Script tools/collect_logs.py : range .log et .csv automatiquement. Compression zip + checksum SHA-256. Push dans d\u00e9p\u00f4t interne validation/trackteur_tests_<date>.zip . R\u00e9diger ticket JIRA si KO.","title":"6. Collecte des preuves &amp; archivage"},{"location":"test_protocol_trackteur/#7-annexes","text":"","title":"7. Annexes"},{"location":"test_protocol_trackteur/#a-modele-de-feuille-de-resultats","text":"ID Date/Heure R\u00e9sultat (S/E) Observateur Notes","title":"A. Mod\u00e8le de feuille de r\u00e9sultats"},{"location":"test_protocol_trackteur/#b-commandes-at-frequentes-extrait","text":"ATI AT+CPIN? AT+CREG? AT+CGATT? AT+CGNSINF # SIM7000 AT+CGPSINFO # A7670 AT+CIPSTART=\"TCP\",\"trackteur.ve2fpd.com\",5055 AT+CIPSEND=<len>","title":"B. Commandes AT fr\u00e9quentes (extrait)"},{"location":"test_protocol_trackteur/#c-points-de-mesure-pcb-v1","text":"Rep\u00e8re D\u00e9signation Commentaire TP1 VCC_5V 5 V r\u00e9gulateur LM2596 TP2 V_BAT Li-ion apr\u00e8s protection TP3 D2 (PWRKEY) Doit commuter 0 \u2192 1 pour ON module Fin de document \u2013 Protocole de test Trackteur","title":"C. Points de mesure \u2014 PCB v1"},{"location":"troubleshooting/","text":"D\u00e9pannage / FAQ Aucune r\u00e9ponse GPS V\u00e9rifier antenne et positionnement \u00c9chec de connexion GSM V\u00e9rifier APN et couverture r\u00e9seau Carte SD non d\u00e9tect\u00e9e Contr\u00f4ler les pistes et alimentation 3.3V","title":"D\u00e9pannage"},{"location":"troubleshooting/#depannage-faq","text":"","title":"D\u00e9pannage / FAQ"},{"location":"troubleshooting/#aucune-reponse-gps","text":"V\u00e9rifier antenne et positionnement","title":"Aucune r\u00e9ponse GPS"},{"location":"troubleshooting/#echec-de-connexion-gsm","text":"V\u00e9rifier APN et couverture r\u00e9seau","title":"\u00c9chec de connexion GSM"},{"location":"troubleshooting/#carte-sd-non-detectee","text":"Contr\u00f4ler les pistes et alimentation 3.3V","title":"Carte SD non d\u00e9tect\u00e9e"}]}